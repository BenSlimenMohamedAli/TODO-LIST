# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  _id: String
  content: String
  createdAt: DateTime
  task(populate: Boolean!): Task
  updatedAt: DateTime
  user(populate: Boolean!): User
}

input CreateCommentInput {
  content: String!
  task: String!
}

input CreateTaskInput {
  description: String
  title: String!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  password: String!
  role: String!
  username: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  password: String!
  username: String!
}

type LoginOutput {
  authorization: String!
  profile: User!
  userId: String!
}

type Mutation {
  comment_create(comment: CreateCommentInput!): Comment!
  comment_delete(_id: String!): Boolean!
  comment_update(comment: UpdateCommentInput!): Boolean!
  login(credentials: LoginInput!): LoginOutput!
  logout: Boolean!
  task_create(task: CreateTaskInput!): Task!
  task_delete(_id: String!): Boolean!
  task_share(taskId: String!, userId: String!): Boolean!
  task_unlink(taskId: String!, userId: String!): Boolean!
  task_update(task: UpdateTaskInput!): Boolean!
  user_create(user: CreateUserInput!): User!
  user_delete(_id: String!): Boolean!
  user_password_update(passwords: UpdatePasswordInput!): Boolean!
  user_update(user: UpdateUserInput!): Boolean!
}

input paginationInput {
  page: Float!
  size: Float!
}

type paginationOutput {
  page: Float!
  size: Float!
  total: Float!
  totalPages: Float!
}

type Query {
  comment(_id: String!): Comment!
  comment_list(taskId: String!): [Comment!]!
  task(_id: String!): Task!
  task_list(filters: TaskFilters, pagination: paginationInput!): TaskListOutput!
  user(_id: String!): User!
  user_list(filters: UserFilters, pagination: paginationInput!): UserListOutput!
}

type Task {
  _id: String
  completed: Boolean
  createdAt: DateTime
  description: String
  owner(populate: Boolean!): User
  sharedWith(populate: Boolean!): [User!]
  title: String
  updatedAt: DateTime
}

input TaskFilters {
  completed: Boolean
  description: String
  owner: String
  title: String
}

type TaskListOutput {
  list: [Task!]!
  pagination: paginationOutput!
}

input UpdateCommentInput {
  _id: String!
  content: String!
}

input UpdatePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input UpdateTaskInput {
  _id: String!
  completed: Boolean
  description: String
  title: String
}

input UpdateUserInput {
  _id: String!
  firstName: String
  lastName: String
}

type User {
  _id: String
  createdAt: DateTime
  firstName: String
  lastName: String
  role: String
  updatedAt: DateTime
  username: String
}

input UserFilters {
  firstName: String
  lastName: String
  role: String
  username: String
}

type UserListOutput {
  list: [User!]!
  pagination: paginationOutput!
}
